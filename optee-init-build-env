#! /bin/sh

# OE Build Environment Setup Script
#
# Copyright (C) 2006-2011 Linux Foundation
# Copyright (C) 2016 Linaro Limited
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Borrow the start of OE's init script, after setting a few things to
# allow for a cleaner directory structure.

#
# Normally this is called as '. ./optee-init-build-env'
# openembedded-core is in a subdirectory, so handle that correctly.
#
# This works in most shells (not dash), but not all of them pass arg1 when
# being sourced.   To workaround the shell limitation use "set arg1" prior 
# to sourcing this script.
#
if [ -n "$BASH_SOURCE" ]; then
   OEROOT="`dirname $BASH_SOURCE`"
elif [ -n "$ZSH_NAME" ]; then
   OEROOT="`dirname $0`"
else
   OEROOT="`pwd`"
fi
if [ -n "$BBSERVER" ]; then
   unset BBSERVER
fi
THIS_SCRIPT=$OEROOT/optee-init-build-env

OEROOT=$OEROOT/openembedded-core

if [ -z "$ZSH_NAME" ] && [ "$0" = "$THIS_SCRIPT" ]; then
   echo "Error: This script needs to be sourced. Please run as '. $THIS_SCRIPT'"
   exit 1
fi

# Point bitbake to one outside of the OE tree, so that we can have it
# as a submodule to make setup easier.
BITBAKEDIR=$(readlink -f $OEROOT/../bitbake)

OEROOT=`readlink -f "$OEROOT"`
export OEROOT
. $OEROOT/scripts/oe-buildenv-internal || exit 1

# Before setup, drop in our config to override the template.
mkdir -p "$BUILDDIR/conf"
echo ../meta-optee/conf > "$BUILDDIR/conf/templateconf.cfg"

$OEROOT/scripts/oe-setup-builddir && \
  [ -n "$BUILDDIR" ] && cd "$BUILDDIR"
unset OEROOT
unset BBPATH
unset THIS_SCRIPT

# Shutdown any bitbake server if the BBSERVER variable is not set
if [ -z "$BBSERVER" ] && [ -f bitbake.lock ] ; then
    grep ":" bitbake.lock > /dev/null && BBSERVER=`cat bitbake.lock` bitbake --status-only
    if [ $? = 0 ] ; then
	echo "Shutting down bitbake memory resident server with bitbake -m"
	BBSERVER=`cat bitbake.lock` bitbake -m
    fi
fi
